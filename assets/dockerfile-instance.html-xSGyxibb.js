import{_ as s,o as n,c as a,f as l}from"./app-tN7dId5R.js";const e={},o=l(`<h2 id="将项目代码打包成-docker-镜像" tabindex="-1"><a class="header-anchor" href="#将项目代码打包成-docker-镜像"><span>将项目代码打包成 docker 镜像</span></a></h2><h3 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">  hello-gin</span></span>
<span class="line"><span style="color:#ABB2BF;">  |</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> Dockerfile</span></span>
<span class="line"><span style="color:#ABB2BF;">  |</span><span style="color:#61AFEF;">--</span><span style="color:#98C379;"> main.go</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="项目源代码" tabindex="-1"><a class="header-anchor" href="#项目源代码"><span>项目源代码</span></a></h3><p><code>main.go</code> 代码如下:</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;">    package</span><span style="color:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    import</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#98C379;">    	&quot;fmt&quot;</span></span>
<span class="line"><span style="color:#98C379;">    	&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line"><span style="color:#98C379;">    	&quot;net/http&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    func</span><span style="color:#61AFEF;"> main</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E06C75;">    	app</span><span style="color:#E5C07B;"> :=</span><span style="color:#E06C75;"> gin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">New</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#E06C75;">    	app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">GET</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">func</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">context</span><span style="color:#C678DD;"> *</span><span style="color:#E5C07B;">gin</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Context</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    		fmt</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Println</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hello gin&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">    		context</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">JSON</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">http</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">StatusOK</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;hello gin&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    	})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    	if</span><span style="color:#E06C75;"> err</span><span style="color:#E5C07B;"> :=</span><span style="color:#E06C75;"> app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">Run</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;:8080&quot;</span><span style="color:#ABB2BF;">); </span><span style="color:#E06C75;">err</span><span style="color:#56B6C2;"> !=</span><span style="color:#D19A66;"> nil</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">    		panic</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    	}</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="书写-dockerfile-文件" tabindex="-1"><a class="header-anchor" href="#书写-dockerfile-文件"><span>书写 Dockerfile 文件</span></a></h3><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">    # 设置基层镜像(golang环境镜像)</span></span>
<span class="line"><span style="color:#61AFEF;">    FROM</span><span style="color:#ABB2BF;"> golang:1.16</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 将main.go 添加到镜像的/app/目录</span></span>
<span class="line"><span style="color:#61AFEF;">    ADD</span><span style="color:#ABB2BF;"> main.go /app/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 设置工作目录为镜像的/app/目录</span></span>
<span class="line"><span style="color:#61AFEF;">    WORKDIR</span><span style="color:#ABB2BF;"> /app/</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 初始化go mod 并且安装 gin依赖</span></span>
<span class="line"><span style="color:#61AFEF;">    RUN</span><span style="color:#ABB2BF;"> go mod init hello-gin &amp;&amp; go get -u github.com/gin-gonic/gin@v1.7.7</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 运行入口文件main.go</span></span>
<span class="line"><span style="color:#61AFEF;">    CMD</span><span style="color:#ABB2BF;"> go run main.go</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    # 标记容器正在监听8080/tcp端口</span></span>
<span class="line"><span style="color:#61AFEF;">    EXPOSE</span><span style="color:#ABB2BF;"> 8080/tcp</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行go-build指令构建镜像" tabindex="-1"><a class="header-anchor" href="#运行go-build指令构建镜像"><span>运行<code>go build</code>指令构建镜像</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">  go</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> hello-gin</span><span style="color:#98C379;"> .</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中 <code>.</code> 指定构建上下文为当前目录</p><h3 id="查看生成镜像" tabindex="-1"><a class="header-anchor" href="#查看生成镜像"><span>查看生成镜像</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">  docker</span><span style="color:#98C379;"> images</span></span>
<span class="line"><span style="color:#61AFEF;">  REPOSITORY</span><span style="color:#98C379;">                      TAG</span><span style="color:#98C379;">       IMAGE</span><span style="color:#98C379;"> ID</span><span style="color:#98C379;">       CREATED</span><span style="color:#98C379;">          SIZE</span></span>
<span class="line"><span style="color:#61AFEF;">  hello-gin</span><span style="color:#98C379;">                        latest</span><span style="color:#98C379;">    3f94931ad361</span><span style="color:#D19A66;">   20</span><span style="color:#98C379;"> minutes</span><span style="color:#98C379;"> ago</span><span style="color:#98C379;">   1GB</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行容器查看镜像是否制作成功" tabindex="-1"><a class="header-anchor" href="#运行容器查看镜像是否制作成功"><span>运行容器查看镜像是否制作成功</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">  docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -itd</span><span style="color:#D19A66;"> --name</span><span style="color:#98C379;"> hello-gin</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> 8080:8080</span><span style="color:#98C379;"> hello-gin</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">  docker</span><span style="color:#98C379;"> logs</span><span style="color:#D19A66;"> -f</span><span style="color:#98C379;"> hello-gin</span></span>
<span class="line"><span style="color:#61AFEF;">  -</span><span style="color:#98C379;"> using</span><span style="color:#98C379;"> env:</span><span style="color:#98C379;">   export</span><span style="color:#98C379;"> GIN_MODE=release</span></span>
<span class="line"><span style="color:#61AFEF;">  -</span><span style="color:#98C379;"> using</span><span style="color:#98C379;"> code:</span><span style="color:#98C379;">  gin.SetMode</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">gin.ReleaseMode</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  [GIN-debug] </span><span style="color:#61AFEF;">GET</span><span style="color:#98C379;">    /</span><span style="color:#D19A66;">                         --</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#98C379;"> main.main.func1</span><span style="color:#ABB2BF;"> (1 </span><span style="color:#98C379;">handlers</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  [GIN-debug] [WARNING] </span><span style="color:#61AFEF;">You</span><span style="color:#98C379;"> trusted</span><span style="color:#98C379;"> all</span><span style="color:#98C379;"> proxies,</span><span style="color:#98C379;"> this</span><span style="color:#98C379;"> is</span><span style="color:#98C379;"> NOT</span><span style="color:#98C379;"> safe.</span><span style="color:#98C379;"> We</span><span style="color:#98C379;"> recommend</span><span style="color:#98C379;"> you</span><span style="color:#98C379;"> to</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> a</span><span style="color:#98C379;"> value.</span></span>
<span class="line"><span style="color:#61AFEF;">  Please</span><span style="color:#98C379;"> check</span><span style="color:#98C379;"> https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies</span><span style="color:#98C379;"> for</span><span style="color:#98C379;"> details.</span></span>
<span class="line"><span style="color:#ABB2BF;">  [GIN-debug] </span><span style="color:#61AFEF;">Listening</span><span style="color:#98C379;"> and</span><span style="color:#98C379;"> serving</span><span style="color:#98C379;"> HTTP</span><span style="color:#98C379;"> on</span><span style="color:#98C379;"> :8080</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问服务器8080端口，服务器控制台打印 hello gin , 并且会返回 “hello gin”。</p>`,17),p=[o];function c(t,i){return n(),a("div",null,p)}const d=s(e,[["render",c],["__file","dockerfile-instance.html.vue"]]),y=JSON.parse(`{"path":"/server/docker/dockerfile-instance.html","title":"Dockerfile实战","lang":"zh-CN","frontmatter":{"title":"Dockerfile实战","description":"Docker,docker，容器，服务器，Dockerfile实战","date":"2024-04-23T10:52:00.000Z","icon":"dockerfile","cover":"https://w.wallhaven.cc/full/d6/wallhaven-d6qj2l.jpg","star":true,"isOriginal":true,"category":["Docker"],"tag":["Docker"],"order":6,"head":[["meta",{"property":"og:url","content":"https://blog.singlequote.cn/server/docker/dockerfile-instance.html"}],["meta",{"property":"og:site_name","content":"SingleQuote's Blog"}],["meta",{"property":"og:title","content":"Dockerfile实战"}],["meta",{"property":"og:description","content":"Docker,docker，容器，服务器，Dockerfile实战"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://w.wallhaven.cc/full/d6/wallhaven-d6qj2l.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-26T09:44:06.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Dockerfile实战"}],["meta",{"property":"article:author","content":"SingleQuote"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:published_time","content":"2024-04-23T10:52:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-26T09:44:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dockerfile实战\\",\\"image\\":[\\"https://w.wallhaven.cc/full/d6/wallhaven-d6qj2l.jpg\\"],\\"datePublished\\":\\"2024-04-23T10:52:00.000Z\\",\\"dateModified\\":\\"2024-04-26T09:44:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SingleQuote\\",\\"url\\":\\"blog.SingleQuote.cn\\"}]}"]]},"headers":[{"level":2,"title":"将项目代码打包成 docker 镜像","slug":"将项目代码打包成-docker-镜像","link":"#将项目代码打包成-docker-镜像","children":[{"level":3,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[]},{"level":3,"title":"项目源代码","slug":"项目源代码","link":"#项目源代码","children":[]},{"level":3,"title":"书写 Dockerfile 文件","slug":"书写-dockerfile-文件","link":"#书写-dockerfile-文件","children":[]},{"level":3,"title":"运行go build指令构建镜像","slug":"运行go-build指令构建镜像","link":"#运行go-build指令构建镜像","children":[]},{"level":3,"title":"查看生成镜像","slug":"查看生成镜像","link":"#查看生成镜像","children":[]},{"level":3,"title":"运行容器查看镜像是否制作成功","slug":"运行容器查看镜像是否制作成功","link":"#运行容器查看镜像是否制作成功","children":[]}]}],"git":{"createdTime":1714124646000,"updatedTime":1714124646000,"contributors":[{"name":"tmh","email":"t13219006372@163.com","commits":1}]},"readingTime":{"minutes":1.21,"words":363},"filePathRelative":"server/docker/dockerfile-instance.md","localizedDate":"2024年4月23日","excerpt":"<h2>将项目代码打包成 docker 镜像</h2>\\n<h3>目录结构</h3>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"shiki one-dark-pro\\" style=\\"background-color:#282c34;color:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#61AFEF\\">  hello-gin</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">  |</span><span style=\\"color:#61AFEF\\">--</span><span style=\\"color:#98C379\\"> Dockerfile</span></span>\\n<span class=\\"line\\"><span style=\\"color:#ABB2BF\\">  |</span><span style=\\"color:#61AFEF\\">--</span><span style=\\"color:#98C379\\"> main.go</span></span>\\n<span class=\\"line\\"></span></code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{d as comp,y as data};
